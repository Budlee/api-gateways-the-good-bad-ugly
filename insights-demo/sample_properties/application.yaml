spring:
  cloud:
    gateway:
      default-filters:
      routes:
        - id: attendees
          uri: http://attendees:8080/attendees
          predicates:
            - Path=/attendees/**
          filters:
            - RewritePath=/attendees/(?<segment>.*), /$\{segment}/
        - id: users
          uri: http://user-details:8081/users
          predicates:
            - Path=/users/**
          filters:
            - RewritePath=/users/(?<segment>.*), /$\{segment}/
#        - id: attendees
#          uri: http://192.168.1.5:8080/
#          predicates:
#            - Path=/a/**
#          filters:
#            - RewritePath=/a/(?<segment>.*), /$\{segment}/

#  @Override
#  public void configure() throws Exception {
#  //Simple Routing to the Attendees Service
#  from("jetty:http://0.0.0.0:8082/attendees?matchOnUriPrefix=true")
#  .to("http4://attendees:8080?bridgeEndpoint=true&throwExceptionOnFailure=true");
#
#  //Simple Routing to the User Details Service
#  from("jetty:http://0.0.0.0:8082/users?matchOnUriPrefix=true")
#  .to("http4://user-details:8081?bridgeEndpoint=true&throwExceptionOnFailure=true");
#}

logging:
  level:
    org.springframework.cloud.gateway: TRACE
    org.springframework.http.server.reactive: DEBUG
    org.springframework.web.reactive: DEBUG
    reactor.ipc.netty: DEBUG
    reactor.netty: DEBUG
management:
  endpoints:
    web:
      exposure:
        include: "*"
server:
  port: 8082